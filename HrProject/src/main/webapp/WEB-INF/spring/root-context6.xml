<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:oauth2="http://www.springframework.org/schema/security/oauth2"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2-1.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<security:http pattern="/oauth/token" create-session="never" use-expressions="false"
		authentication-manager-ref="clientAuthenticationManager"
		xmlns="http://www.springframework.org/schema/security">
		<security:intercept-url pattern="/oauth/token" access="IS_AUTHENTICATED_FULLY" />
		<security:anonymous enabled="false" />
		<security:http-basic />
		<security:form-login authentication-success-handler-ref="mySuccessHandler"/>
		<security:custom-filter ref="clientCredentialsTokenEndpointFilter" after="BASIC_AUTH_FILTER" />
		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
	</security:http>
	
	<bean id="mySuccessHandler" class="com.muf.hr.config.RestAuthenticationSuccessHandler" />

	<security:http pattern="/muf/**" create-session="never"
		entry-point-ref="oauthAuthenticationEntryPoint"
		access-decision-manager-ref="accessDecisionManager" use-expressions="false"
		xmlns="http://www.springframework.org/schema/security">
		<security:anonymous enabled="false" />
		<security:intercept-url pattern="/muf/**"
			access="ROLE_USER" />
		<security:custom-filter ref="resourceServerFilter"
			before="PRE_AUTH_FILTER" />
		<security:access-denied-handler ref="oauthAccessDeniedHandler" />
	</security:http>

	<bean id="oauthAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="dstest" />
	</bean>

	<bean id="clientAuthenticationEntryPoint"
		class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
		<property name="realmName" value="dstest/client" />
		<property name="typeName" value="Basic" />
	</bean>

	<bean id="oauthAccessDeniedHandler"
		class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
	</bean>

	<bean id="clientCredentialsTokenEndpointFilter"
		class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
		<property name="authenticationManager" ref="clientAuthenticationManager" />
	</bean>

	<security:authentication-manager id="clientAuthenticationManager"
		xmlns="http://www.springframework.org/schema/security">
		<security:authentication-provider
			user-service-ref="clientDetailsUserService" />
	</security:authentication-manager>

	<bean id="clientDetailsUserService"
		class="org.springframework.security.oauth2.provider.client.ClientDetailsUserDetailsService">
		<constructor-arg ref="clientDetails" />
	</bean>

	<!-- TOKEN STORE -->
	<bean id="tokenStore"
		class="org.springframework.security.oauth2.provider.token.InMemoryTokenStore" />

	<bean id="tokenServices"
		class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
		<property name="tokenStore" ref="tokenStore" />
		<property name="supportRefreshToken" value="true" />
		<property name="accessTokenValiditySeconds" value="30" />
	</bean>

	<bean id="userApprovalHandler"
		class="org.springframework.security.oauth2.provider.approval.TokenServicesUserApprovalHandler">
		<property name="tokenServices" ref="tokenServices" />
	</bean>
	
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased"
		xmlns="http://www.springframework.org/schema/beans">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.oauth2.provider.vote.ScopeVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>

	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider user-service-ref="customUserDetailsService" />
		<!-- <security:authentication-provider>
			<security:user-service id="userDetailsService">
				<security:user name="suta" password="password"
					authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider> -->
	</security:authentication-manager>
	
	<bean id="customUserDetailsService"
		class="com.muf.hr.config.CustomUserDetailsService" />
	
	<!-- token management -->
	<oauth2:authorization-server
		client-details-service-ref="clientDetails" token-services-ref="tokenServices"
		user-approval-handler-ref="userApprovalHandler">
		<oauth2:authorization-code />
		<oauth2:implicit />
		<oauth2:refresh-token />
		<oauth2:client-credentials />
		<oauth2:password />
	</oauth2:authorization-server>

	<oauth2:resource-server id="resourceServerFilter"
		resource-id="dstest" token-services-ref="tokenServices" />

	<!-- client definition -->
	<oauth2:client-details-service id="clientDetails">
		<oauth2:client client-id="my-trusted-client"
			secret="secret" 
			authorized-grant-types="password,authorization_code,refresh_token,implicit,redirect" 
			authorities="ROLE_CLIENT, ROLE_TRUSTED_CLIENT"
			redirect-uri="/web"
			scope="read, write, trust"
			access-token-validity="30"
			refresh-token-validity="600"/>
	</oauth2:client-details-service>
	
	<security:global-method-security pre-post-annotations="enabled" proxy-target-class="true">
		<security:expression-handler ref="oauthExpressionHandler"/>
	</security:global-method-security>
	
	<oauth2:expression-handler id="oauthExpressionHandler"/>
	<oauth2:web-expression-handler id="oauthWebExpressionHandler"/>
	
	<mvc:annotation-driven />
</beans>
